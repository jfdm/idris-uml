data String

data User {
  id : String,
  name : String
}

data Item {
  id : String,
  name : String,
  desc : String
}

data Order {
  id : String,
  item : Items
}

component Accounting {
  provides ManageOrders from Orders
  provides ManageCustomers from Customers
  requires ManageInventory from Warehouses

  component Customers {
    interface ManageCustomers {
      addCustomer : (c : Customer) -> Bool
      removeCustomer : (c : Customer) -> Bool
    }
  }

  component Orders {
    interface ManageOrders {
      createOrder : Int
      addToOrder : (p : Product) -> (orderID : Int) -> Bool
      removeFromOrder : (p : Product) -> (orderID : Int) -> Bool
    }
    requires ManageCustomers from Customers
    requires ManageInventory from Warehouses
  }
}

component Warehouses {
  provides SearchInventory from Inventory
  provides ManageInventory from Inventory

  component Inventory {
    interface SearchInventory {
      createOrder : Int
      addToOrder : (p : Product) -> (orderID : Int) -> Bool
      removeFromOrder : (p : Product) -> (orderID : Int) -> Bool
    }
    interface ManageInventory {
      createOrder : Int
      addToOrder : (p : Product) -> (orderID : Int) -> Bool
      removeFromOrder : (p : Product) -> (orderID : Int) -> Bool
    }
  }
}

component WebStore {
  provides ProductSearch from SearchEngine
  provides OnlineShopping from ShoppingCart
  provides UserSession from Authentication

  requires SearchInventory from Warehouses
  requires ManageOrders from Accounting
  requires ManageCustomers from Accounting

  component Authentication {
    interface UserSession {
      createOrder : Int
      addToOrder : (p : Product) -> (orderID : Int) -> Bool
      removeFromOrder : (p : Product) -> (orderID : Int) -> Bool
    }
    requires ManageCustomers from Accounting
  }

  component ShoppingCart {
    interface OnlineShopping {
      createOrder : Int
      addToOrder : (p : Product) -> (orderID : Int) -> Bool
      removeFromOrder : (p : Product) -> (orderID : Int) -> Bool
    }
    requires UserSession from Authentication
    requires ManageOrders from Accounting
  }

  component SearchEngine {
    interface ProductSearch {
      createOrder : Int
      addToOrder : (p : Product) -> (orderID : Int) -> Bool
      removeFromOrder : (p : Product) -> (orderID : Int) -> Bool

    }
    requires SearchInventory from Warehouses
  }

}
